* Random order insertion

#+header: :eval yes
#+header: :file binary_search_tree_random_order_insertion.img.pdf
#+header: :imagemagick yes
#+header: :headers '("\\usepackage{tikz}" "\\usepackage[default]{sourcesanspro}")
#+begin_src latex
\usetikzlibrary {graphs,graphdrawing} \usegdlibrary {trees}
\tikz \graph [binary tree layout, nodes={draw,circle}, sibling sep=0pt]
  { 3 -- { 1 -- {, 2}, 4 -- {,5}} };
#+end_src

* Pathological case (keys inserted in order)

#+header: :eval yes
#+header: :file binary_search_tree_sorted_order_insertion.img.pdf
#+header: :imagemagick yes
#+header: :headers '("\\usepackage{tikz}" "\\usepackage[default]{sourcesanspro}")
#+begin_src latex
\usetikzlibrary {graphs,graphdrawing} \usegdlibrary {trees}
\tikz \graph [binary tree layout, nodes={draw,circle}, sibling sep=0pt]
  { 1 -- {, 2 -- {, 3 -- {, 4 -- {, 5}}}} };
#+end_src

* Basic example

#+header: :eval yes
#+header: :file binary_search_tree.img.pdf
#+header: :imagemagick yes
#+header: :headers '("\\usepackage{tikz}" "\\usepackage[default]{sourcesanspro}")
#+begin_src latex
\usetikzlibrary {graphs,graphdrawing} \usegdlibrary {trees}
\tikz \graph [binary tree layout, nodes={draw,circle}, sibling sep=0pt]
  { 5 -- { 1 -- {0, 4 -- {2,}}, 9 -- {7, 10}} };
#+end_src
