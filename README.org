#+title: Codex

# Include additional CSS styles. Sadly the readtheorg theme does not appear to
# come bundled with Haskell syntax colors, so we have to generate these ourselves.
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="syntax-highlighting.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style.css" />

# Set default header argument for all source code blocks. The "no-export" means
# that we do not expand noweb references when exporting (weaving) --- the fact
# that this is not the default option is odd.
#+PROPERTY: header-args :noweb no-export

# Number the top 5 levels of headings; since h1 is the title, this means headings
# up to 4 numbers --- e.g., "1.2.3.4".
#+OPTIONS: H:5

#+BIBLIOGRAPHY: ./citations.bib

* Copyright notice

The [[file:COPYRIGHT][COPYRIGHT]] file governs everything in this repository, including the generated HTML files. All source code listings are placed under the [[file:LICENSE][Apache License, Version 2.0]]. Basically all prose surrounding the code listings is copyrighted by the author (Linus Arver), but the source code blocks are open-sourced.

* Introduction

This project aims to capture my notes for studying various programming problems (data structures and algorithms).

* Layout

Every problem gets its own =README.org= file in its own subfolder. The solutions are all in Python. All solutions are "standalone" in that none of them use any libraries other than what's provided by Python's standard libraries.

The problems are drawn from [cite:@epip]. Other reference materials are cited where applicable. Below is a table of every problem, with tags that give a brief description of each one, and references.

#+HTML_HEAD: <style type="text/css">
#+HTML_HEAD: .problems-table col:nth-of-type(1) { width:  40%; }
#+HTML_HEAD: .problems-table col:nth-of-type(2) { width: 30%; }
#+HTML_HEAD: .problems-table col:nth-of-type(3) { width: 30%; }
#+HTML_HEAD: </style>
#+ATTR_HTML: :class problems-table
| Name                     | Tags                | Sources                                                                                      |
|--------------------------+---------------------+----------------------------------------------------------------------------------------------|
| [[file:problem/parity/README.org][Parity]]                   | bitwise             | [cite:@epip 27; @hd 96]                                                                      |
| [[file:problem/rectangle_overlap/README.org][Rectangle overlap]]        | geometry            | [cite:@epip 39]                                                                              |
| [[file:problem/rearrange_list_even_odd/README.org][Rearrange list]]           | array, partitioning | [cite:@epip 41]                                                                              |
| [[file:problem/dutch_national_flag/README.org][Dutch national flag]]      | array, partitioning | [cite:@epip 43; @levitin 200; @sedgewick 296-301; @pearls 123; @cormen 186; @skiena 125-126] |
| [[file:problem/buy_sell_stock_once/README.org][Buy and sell stock once]]  | array               | [cite:@epip 51]                                                                              |
| [[file:problem/buy_sell_stock_twice/README.org][Buy and sell stock twice]] | array               | [cite:@epip 53]                                                                              |

* Literate Programming Build System

#+include: "build-literate.org" :lines "2-"

* References

#+begin_src bibtex :tangle citations.bib :eval no :exports none
@book{epip,
    title = {Elements of Programming Interviews in Python: The Insiders' Guide},
    author = {Aziz, Adnan and Lee, Tsung-Hsien and Prakash, Amit},
    year = {2018},
    isbn = {9781537713946},
    shorttitle = {Elements of Programming Interviews in Python},
    language = {eng},
    publisher = {CreateSpace Independent Publishing Platform (25 July. 2018)},
    month = jul,
    note = {OCLC: 1308498466},
}

@book{hd,
    title = {Hacker's Delight},
    author = {Warren, Henry S.},
    edition = {2nd ed},
    year = {2013},
    isbn = {9780321842688},
    publisher = {Addison-Wesley},
    keywords = {Computer programming},
    address = {Upper Saddle River, NJ},
}

@book{taocp3,
    title = {The Art of Computer Programming},
    author = {Knuth, Donald Ervin},
    edition = {2nd ed},
    year = {1997},
    isbn = {9780201896831 9780201896848 9780201896855},
    publisher = {Addison-Wesley},
    keywords = {Computer programming, Computer algorithms},
    address = {Reading, Mass},
}

@book{cormen,
    title = {Introduction to algorithms},
    editor = {Cormen, Thomas H.},
    edition = {3rd ed},
    year = {2009},
    isbn = {9780262033848 9780262533058},
    publisher = {MIT Press},
    note = {OCLC: ocn311310321},
    keywords = {Computer programming, Computer algorithms},
    address = {Cambridge, Mass},
}

@book{sedgewick,
    title = {Algorithms},
    author = {Sedgewick, Robert and Wayne, Kevin Daniel},
    edition = {4th ed},
    year = {2011},
    isbn = {9780321573513},
    publisher = {Addison-Wesley},
    keywords = {Computer algorithms, Textbooks},
    address = {Upper Saddle River, NJ},
}

@book{levitin,
    title = {Algorithmic puzzles},
    author = {Levitin, Anany and Levitin, Maria},
    year = {2011},
    isbn = {9780199740444},
    publisher = {Oxford University Press},
    keywords = {Mathematical recreations, Algorithms},
    address = {Oxford ; New York},
}

@book{pearls,
    title = {Programming pearls},
    author = {Bentley, Jon Louis},
    edition = {2nd ed},
    year = {2000},
    isbn = {9780201657883},
    publisher = {Addison-Wesley},
    keywords = {Computer programming},
    address = {Reading, Mass},
}

@book{skiena,
    title = {The algorithm design manual},
    author = {Skiena, Steven S.},
    edition = {2nd ed},
    year = {2008},
    isbn = {9781848000698 9781848000704},
    publisher = {Springer},
    note = {OCLC: ocn228582051},
    keywords = {Computer algorithms},
    address = {London},
}

@misc{se112007,
    title = {O(1) space, O(N) complexity algorithm for buy and sell stock twice interview question},
    author = {eefiasfira (https://cs.stackexchange.com/users/107747/eefiasfira)},
    howpublished = {Computer Science Stack Exchange},
    note = {URL:https://cs.stackexchange.com/q/112007 (version: 2021-04-21)},
    eprint = {https://cs.stackexchange.com/q/112007},
    url = {https://cs.stackexchange.com/q/112007}
}

@article{knuth_literate_1984,
    title = {Literate Programming},
    volume = {27},
    issn = {0010-4620, 1460-2067},
    url = {https://academic.oup.com/comjnl/article-lookup/doi/10.1093/comjnl/27.2.97},
    doi = {10.1093/comjnl/27.2.97},
    language = {en},
    number = {2},
    urldate = {2023-05-03},
    journal = {The Computer Journal},
    author = {Knuth, D. E.},
    month = feb,
    year = {1984},
    pages = {97--111},
}

@article{ramsey_literate_1994,
    title = {Literate programming simplified},
    author = {Ramsey, Norman},
    year = {1994},
    journal = {IEEE Software},
    volume = {11},
    issn = {1937-4194},
    doi = {10.1109/52.311070},
    abstract = {Literate programming tools let you arrange the parts of a program in any order and extract documentation and code from the same source file. The author argues that language-dependence and feature complexity have hampered acceptance of these tools, then offers a simpler alternative.{\textless}{\textgreater}},
    number = {5},
    month = sep,
    keywords = {Documentation, Code standards, Writing, Program processors, Computer languages, Operating systems, Internet, Strips, Pipelines},
    pages = {97--105},
}
#+end_src

#+CITE_EXPORT: csl ~/prog/codex/deps/styles/ieee.csl
#+PRINT_BIBLIOGRAPHY:
